<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HtmlSanitizer</name>
    </assembly>
    <members>
        <member name="T:Ganss.XSS.RemovingTagEventArgs">
            <summary>
            Provides data for the <see cref="E:Ganss.XSS.HtmlSanitizer.RemovingTag"/> event.
            </summary>
        </member>
        <member name="P:Ganss.XSS.RemovingTagEventArgs.Tag">
            <summary>
            Gets or sets the tag to be removed.
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="T:Ganss.XSS.RemovingAttributeEventArgs">
            <summary>
            Provides data for the <see cref="E:Ganss.XSS.HtmlSanitizer.RemovingAttribute"/> event.
            </summary>
        </member>
        <member name="P:Ganss.XSS.RemovingAttributeEventArgs.Attribute">
            <summary>
            Gets or sets the attribute to be removed.
            </summary>
            <value>
            The attribute.
            </value>
        </member>
        <member name="T:Ganss.XSS.RemovingStyleEventArgs">
            <summary>
            Provides data for the <see cref="E:Ganss.XSS.HtmlSanitizer.RemovingStyle"/> event.
            </summary>
        </member>
        <member name="P:Ganss.XSS.RemovingStyleEventArgs.Style">
            <summary>
            Gets or sets the style to be removed.
            </summary>
            <value>
            The style.
            </value>
        </member>
        <member name="T:Ganss.XSS.HtmlSanitizer">
            <summary>
            Cleans HTML fragments from constructs that can lead to <a href="https://en.wikipedia.org/wiki/Cross-site_scripting">XSS attacks</a>.
            </summary>
            <remarks>
            XSS attacks can occur at several levels within an HTML fragment:
            <list type="bullet">
            <item>HTML Tags (e.g. the &lt;script&gt; tag)</item>
            <item>HTML attributes (e.g. the "onload" attribute)</item>
            <item>CSS styles (url property values)</item>
            <item>malformed HTML or HTML that exploits parser bugs in specific browsers</item>
            </list>
            <para>
            The HtmlSanitizer class addresses all of these possible attack vectors by using an HTML parser that is based on the one used
            in the Gecko browser engine (see <a href="https://github.com/jamietre/CsQuery">CsQuery</a>).
            </para>
            <para>
            In order to facilitate different use cases, HtmlSanitizer can be customized at the levels mentioned above:
            <list type="bullet">
            <item>You can specify the allowed HTML tags through the property <see cref="P:Ganss.XSS.HtmlSanitizer.AllowedTags"/>. All other tags will be stripped.</item>
            <item>You can specify the allowed HTML attributes through the property <see cref="P:Ganss.XSS.HtmlSanitizer.AllowedAttributes"/>. All other attributes will be stripped.</item>
            <item>You can specify the allowed CSS property names through the property <see cref="P:Ganss.XSS.HtmlSanitizer.AllowedCssProperties"/>. All other styles will be stripped.</item>
            <item>You can specify the allowed URI schemes through the property <see cref="P:Ganss.XSS.HtmlSanitizer.AllowedCssProperties"/>. All other URIs will be stripped.</item>
            <item>You can specify the HTML attributes that contain URIs (such as "src", "href" etc.) through the property <see cref="P:Ganss.XSS.HtmlSanitizer.UriAttributes"/>.</item>
            </list>
            </para>
            </remarks>
            <example>
            <code>
            <![CDATA[
            var sanitizer = new HtmlSanitizer();
            var html = @"<script>alert('xss')</script><div onload=""alert('xss')"" style=""background-color: test"">Test<img src=""test.gif"" style=""background-image: url(javascript:alert('xss')); margin: 10px""></div>";
            var sanitized = sanitizer.Sanitize(html, "http://www.example.com");
            // -> "<div style="background-color: test">Test<img style="margin: 10px" src="http://www.example.com/test.gif"></div>"
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Ganss.XSS.HtmlSanitizer"/> class.
            </summary>
            <param name="allowedTags">The allowed tag names such as "a" and "div". When <c>null</c>, uses <see cref="F:Ganss.XSS.HtmlSanitizer.DefaultAllowedTags"/></param>
            <param name="allowedSchemes">The allowed HTTP schemes such as "http" and "https". When <c>null</c>,  uses <see cref="F:Ganss.XSS.HtmlSanitizer.DefaultAllowedSchemes"/></param>
            <param name="allowedAttributes">The allowed HTML attributes such as "href" and "alt". When <c>null</c>, uses <see cref="F:Ganss.XSS.HtmlSanitizer.DefaultAllowedAttributes"/></param>
            <param name="uriAttributes">the HTML attributes that can contain a URI such as "href". When <c>null</c>, uses <see cref="F:Ganss.XSS.HtmlSanitizer.DefaultUriAttributes"/></param>
            <param name="allowedCssProperties">the allowed CSS properties such as "font" and "margin". When <c>null</c>, uses <see cref="F:Ganss.XSS.HtmlSanitizer.DefaultAllowedCssProperties"/></param>
        </member>
        <member name="F:Ganss.XSS.HtmlSanitizer.DefaultAllowedSchemes">
            <summary>
            The default allowed URI schemes.
            </summary>
        </member>
        <member name="F:Ganss.XSS.HtmlSanitizer.DefaultAllowedTags">
            <summary>
            The default allowed HTML tag names.
            </summary>
        </member>
        <member name="F:Ganss.XSS.HtmlSanitizer.DefaultAllowedAttributes">
            <summary>
            The default allowed HTML attributes.
            </summary>
        </member>
        <member name="F:Ganss.XSS.HtmlSanitizer.DefaultUriAttributes">
            <summary>
            The default URI attributes.
            </summary>
        </member>
        <member name="F:Ganss.XSS.HtmlSanitizer.DefaultAllowedCssProperties">
            <summary>
            The default allowed CSS properties.
            </summary>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.OnRemovingTag(Ganss.XSS.RemovingTagEventArgs)">
            <summary>
            Raises the <see cref="E:RemovingTag"/> event.
            </summary>
            <param name="e">The <see cref="T:Ganss.XSS.RemovingTagEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.OnRemovingAttribute(Ganss.XSS.RemovingAttributeEventArgs)">
            <summary>
            Raises the <see cref="E:RemovingAttribute"/> event.
            </summary>
            <param name="e">The <see cref="T:Ganss.XSS.RemovingAttributeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.OnRemovingStyle(Ganss.XSS.RemovingStyleEventArgs)">
            <summary>
            Raises the <see cref="E:RemovingStyle"/> event.
            </summary>
            <param name="e">The <see cref="T:Ganss.XSS.RemovingStyleEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ganss.XSS.HtmlSanitizer.DefaultDisallowedCssPropertyValue">
            <summary>
            The default regex for disallowed CSS property values.
            </summary>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.Sanitize(System.String,System.String,CsQuery.Output.IOutputFormatter)">
            <summary>
            Sanitizes the specified HTML.
            </summary>
            <param name="html">The HTML to sanitize.</param>
            <param name="baseUrl">The base URL relative URLs are resolved against. No resolution if empty.</param>
            <param name="outputFormatter">The CsQuery output formatter used to render the DOM. Using the default formatter if null.</param>
            <returns>The sanitized HTML.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.IsUriAttribute(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Determines whether the specified attribute can contain a URI.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns><c>true</c> if the attribute can contain a URI; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.IsAllowedTag(CsQuery.IDomNode)">
            <summary>
            Determines whether the specified tag is allowed.
            </summary>
            <param name="tag">The tag.</param>
            <returns><c>true</c> if the tag is allowed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.IsAllowedAttribute(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Determines whether the specified attribute is allowed.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns><c>true</c> if the attribute is allowed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.SanitizeStyle(CsQuery.Implementation.CSSStyleDeclaration,System.String)">
            <summary>
            Sanitizes the style.
            </summary>
            <param name="styles">The styles.</param>
            <param name="baseUrl">The base URL.</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.DecodeCss(System.String)">
            <summary>
            Decodes CSS unicode escapes and removes comments.
            </summary>
            <param name="css">The CSS string.</param>
            <returns>The decoded CSS string.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.GetSafeUri(System.String)">
            <summary>
            Tries to create a safe <see cref="T:System.Uri"/> object from a string.
            </summary>
            <param name="url">The URL.</param>
            <returns>The <see cref="T:System.Uri"/> object or null if no safe <see cref="T:System.Uri"/> can be created.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.SanitizeUrl(System.String,System.String)">
            <summary>
            Sanitizes a URL.
            </summary>
            <param name="url">The URL.</param>
            <param name="baseUrl">The base URL relative URLs are resolved against (empty or null for no resolution).</param>
            <returns>The sanitized URL or null if no safe URL can be created.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.RemoveTag(CsQuery.IDomObject)">
            <summary>
            Remove a tag from the document.
            </summary>
            <param name="tag">to be removed</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.RemoveAttribute(CsQuery.IDomObject,System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Remove an attribute from the document.
            </summary>
            <param name="tag">tag where the attribute to belongs</param>
            <param name="attribute">to be removed</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.RemoveStyle(CsQuery.ICSSStyleDeclaration,System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Remove a style from the document.
            </summary>
            <param name="styles">collection where the style to belongs</param>
            <param name="style">to be removed</param>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.AllowedSchemes">
            <summary>
            Gets or sets the allowed HTTP schemes such as "http" and "https".
            </summary>
            <value>
            The allowed HTTP schemes.
            </value>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.AllowedTags">
            <summary>
            Gets or sets the allowed HTML tag names such as "a" and "div".
            </summary>
            <value>
            The allowed tag names.
            </value>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.AllowedAttributes">
            <summary>
            Gets or sets the allowed HTML attributes such as "href" and "alt".
            </summary>
            <value>
            The allowed HTML attributes.
            </value>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.AllowDataAttributes">
            <summary>
            Allow all HTML5 data attributes; the attributes prefixed with data-
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.UriAttributes">
            <summary>
            Gets or sets the HTML attributes that can contain a URI such as "href".
            </summary>
            <value>
            The URI attributes.
            </value>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.AllowedCssProperties">
            <summary>
            Gets or sets the allowed CSS properties such as "font" and "margin".
            </summary>
            <value>
            The allowed CSS properties.
            </value>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.DisallowCssPropertyValue">
            <summary>
            Gets or sets a regex that must not match for legal CSS property values.
            </summary>
            <value>
            The regex.
            </value>
        </member>
        <member name="E:Ganss.XSS.HtmlSanitizer.RemovingTag">
            <summary>
            Occurs before a tag is removed.
            </summary>
        </member>
        <member name="E:Ganss.XSS.HtmlSanitizer.RemovingAttribute">
            <summary>
            Occurs before an attribute is removed.
            </summary>
        </member>
        <member name="E:Ganss.XSS.HtmlSanitizer.RemovingStyle">
            <summary>
            Occurs before a style is removed.
            </summary>
        </member>
    </members>
</doc>
